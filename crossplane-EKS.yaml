---
apiVersion: ec2.aws.upbound.io/v1beta1
kind: VPC
metadata:
  annotations:
    meta.upbound.io/example-id: fsx/v1beta1/ontapfilesystem
  name: dev-main
spec:
  forProvider:
    cidrBlock: 10.0.0.0/16
    region: us-east-1
    enableDnsHostnames: true
    enableDnsSupport: true
    tags:
      Name: main
---
apiVersion: ec2.aws.upbound.io/v1beta1
kind: InternetGateway
metadata:
  name: dev-igw
spec:
  forProvider:
    region: us-east-1
    tags:
      Name: main
    vpcIdRef:
      name: dev-main
---
apiVersion: ec2.aws.upbound.io/v1beta1
kind: Subnet
metadata:
  annotations:
    meta.upbound.io/example-id: fsx/v1beta1/lustrefilesystem
  labels:
    name: dev-private-us-east-1a
  name: dev-private-us-east-1a
spec:
  forProvider:
    availabilityZone: us-east-1a
    cidrBlock: 10.0.0.0/19
    region: us-east-1
    tags:
      name: dev-private-us-east-1a
      kubernetes.io/role/internal-elb: "1"
      kubernetes.io/cluster/dev-demo: "owned"
    vpcIdRef:
      name: dev-main
---
apiVersion: ec2.aws.upbound.io/v1beta1
kind: Subnet
metadata:
  annotations:
    meta.upbound.io/example-id: fsx/v1beta1/lustrefilesystem
  labels:
    name: dev-private-us-east-1b
  name: dev-private-us-east-1b
spec:
  forProvider:
    availabilityZone: us-east-1b
    cidrBlock: 10.0.32.0/19
    region: us-east-1
    tags:
      name: dev-private-us-east-1b
      kubernetes.io/role/internal-elb: "1"
      kubernetes.io/cluster/dev-demo: "owned"
    vpcIdRef:
      name: dev-main
---
apiVersion: ec2.aws.upbound.io/v1beta1
kind: Subnet
metadata:
  annotations:
    meta.upbound.io/example-id: fsx/v1beta1/lustrefilesystem
  labels:
    name: dev-public-us-east-1a
  name: dev-public-us-east-1a
spec:
  forProvider:
    availabilityZone: us-east-1a
    cidrBlock: 10.0.64.0/19
    region: us-east-1
    tags:
      name: dev-public-us-east-1a
      kubernetes.io/role/internal-elb: "1"
      kubernetes.io/cluster/dev-demo: "owned"
    vpcIdRef:
      name: dev-main
---
apiVersion: ec2.aws.upbound.io/v1beta1
kind: Subnet
metadata:
  annotations:
    meta.upbound.io/example-id: fsx/v1beta1/lustrefilesystem
  labels:
    name: dev-public-us-east-1b
  name: dev-public-us-east-1b
spec:
  forProvider:
    availabilityZone: us-east-1b
    cidrBlock: 10.0.96.0/19
    region: us-east-1
    tags:
      name: dev-public-us-east-1b
      kubernetes.io/role/internal-elb: "1"
      kubernetes.io/cluster/dev-demo: "owned"
    vpcIdRef:
      name: dev-main
---
apiVersion: ec2.aws.upbound.io/v1beta1
kind: EIP
metadata:
  name: dev-nat
spec:
  forProvider:
    region: us-east-1
    tags:
      Name: dev-nat
---
apiVersion: ec2.aws.upbound.io/v1beta1
kind: NATGateway
metadata:
  labels:
    testing.upbound.io/example-name: example
  name: dev-nat
spec:
  forProvider:
    connectivityType: public
    allocationIdRef:
      name: dev-nat
    region: us-east-1
    subnetIdSelector:
      matchLabels:
        name: dev-public-us-east-1a
    tags:
      Name: dev-nat
---
apiVersion: ec2.aws.upbound.io/v1beta1
kind: RouteTable
metadata:
  name: dev-private
spec:
  forProvider:
    region: us-east-1
    tags:
      Name: dev-private
    vpcIdRef:
      name: dev-main
---
apiVersion: ec2.aws.upbound.io/v1beta1
kind: Route
metadata:
  name: dev-private
spec:
  forProvider:
    destinationCidrBlock: 0.0.0.0/0
    natGatewayIdRef:
      name: dev-nat
    region: us-east-1
    routeTableIdRef:
      name: dev-private
---
apiVersion: ec2.aws.upbound.io/v1beta1
kind: RouteTable
metadata:
  name: dev-public
spec:
  forProvider:
    region: us-east-1
    tags:
      Name: dev-public
    vpcIdRef:
      name: dev-main
---
apiVersion: ec2.aws.upbound.io/v1beta1
kind: Route
metadata:
  name: dev-public
spec:
  forProvider:
    destinationCidrBlock: 0.0.0.0/0
    gatewayIdRef:
      name: dev-igw
    region: us-east-1
    routeTableIdRef:
      name: dev-public
---
apiVersion: ec2.aws.upbound.io/v1beta1
kind: RouteTableAssociation
metadata:
  name: dev-private-us-east-1a
spec:
  forProvider:
    region: us-east-1
    routeTableIdRef:
      name: dev-private
    subnetIdRef:
      name: dev-private-us-east-1a
---
apiVersion: ec2.aws.upbound.io/v1beta1
kind: RouteTableAssociation
metadata:
  name: dev-private-us-east-1b
spec:
  forProvider:
    region: us-east-1
    routeTableIdRef:
      name: dev-private
    subnetIdRef:
      name: dev-private-us-east-1b
---
apiVersion: ec2.aws.upbound.io/v1beta1
kind: RouteTableAssociation
metadata:
  name: dev-public-us-east-1a
spec:
  forProvider:
    region: us-east-1
    routeTableIdRef:
      name: dev-public
    subnetIdRef:
      name: dev-public-us-east-1a
---
apiVersion: ec2.aws.upbound.io/v1beta1
kind: RouteTableAssociation
metadata:
  name: dev-public-us-east-1b
spec:
  forProvider:
    region: us-east-1
    routeTableIdRef:
      name: dev-public
    subnetIdRef:
      name: dev-public-us-east-1b
---
apiVersion: iam.aws.upbound.io/v1beta1
kind: Role
metadata:
  name: dev-demo-eks-cluster
spec:
  forProvider:
    assumeRolePolicy: |
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Effect": "Allow",
            "Principal": {
              "Service": "eks.amazonaws.com"
            },
            "Action": "sts:AssumeRole"
          }
        ]
      }
---
apiVersion: iam.aws.upbound.io/v1beta1
kind: RolePolicyAttachment
metadata:
  name: dev-demo-eks-cluster-amazon-eks-cluster-policy
spec:
  forProvider:
    role: dev-demo-eks-cluster
    policyArn: arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
---
apiVersion: eks.aws.upbound.io/v1beta1
kind: Cluster
metadata:
  annotations:
    uptest.upbound.io/timeout: "2400"
  name: dev-demo
spec:
  forProvider:
    region: us-east-1
    roleArnRef:
      name: dev-demo-eks-cluster
    vpcConfig:
      # endpointPrivateAccess: false
      #endpointPublicAccess: true
      - subnetIdRefs:
        - name: dev-private-us-east-1a
        - name: dev-private-us-east-1b
---
apiVersion: iam.aws.upbound.io/v1beta1
kind: Role
metadata:
  name: dev-demo-eks-nodes
spec:
  forProvider:
    assumeRolePolicy: |
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        }
---
apiVersion: iam.aws.upbound.io/v1beta1
kind: RolePolicyAttachment
metadata:
  name: dev-demo-eks-nodes-amazon-eks-worker-node-policy
spec:
  forProvider:
    role: dev-demo-eks-nodes
    policyArn: arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
---
apiVersion: iam.aws.upbound.io/v1beta1
kind: RolePolicyAttachment
metadata:
  name: dev-demo-eks-nodes-amazon-eks-cni-policy
spec:
  forProvider:
    role: dev-demo-eks-nodes
    policyArn: arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
---
apiVersion: iam.aws.upbound.io/v1beta1
kind: RolePolicyAttachment
metadata:
  name: dev-demo-eks-nodes-amazon-ec2-container-registry-read-only
spec:
  forProvider:
    role: dev-demo-eks-nodes
    policyArn: arn:aws:iam::aws:policy/AmazonEC2ConatinerRegistryReadOnly
---
apiVersion: eks.aws.upbound.io/v1beta1
kind: NodeGroup
metadata:
  name: general
spec:
  forProvider:
    clusterNameRef:
      name: dev-demo
    nodeRoleArnRef:
      name: dev-demo-eks-nodes
    region: us-east-1
    capacityType: ON_DEMAND
    instanceTypes: ["t3.small"]
    labels:
      role: general
    scalingConfig:
      - desiredSize: 1
        maxSize: 4
        minSize: 1
    subnetIdRefs:
      - name: dev-private-us-east-1a
      - name: dev-private-us-east-1b
---
apiVersion: eks.aws.upbound.io/v1beta1
kind: NodeGroup
metadata:
  name: spot
spec:
  forProvider:
    clusterNameRef:
      name: dev-demo
    nodeRoleArnRef:
      name: dev-demo-eks-nodes
    region: us-east-1
    capacityType: SPOT
    instanceTypes: ["t3.small"]
    labels:
      role: spot
    taint:
      - key: type
        value: spot
        effect: NO_SCHEDULE
    scalingConfig:
      - desiredSize: 1
        maxSize: 4
        minSize: 1
    subnetIdRefs:
      - name: dev-private-us-east-1a
      - name: dev-private-us-east-1b

